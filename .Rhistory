as.character(steps_zero))
cat(paste(dates_NA, intervals_NA, steps_NA, steps_zero, sep = '\n\n'))
rm(dates_NA, intervals_NA, steps_NA, steps_zero)
filler <- function(interval, steps){
if(!is.na(steps))
result <- c(steps)
else
result <- ave_spi[ave_spi$interval == interval, ]$steps
return(result)
}
imputed_activity <- activity
imputed_activity$steps <- mapply(filler, imputed_activity$interval, imputed_activity$steps)
tot_imp_spd <- tapply(imputed_activity$steps, imputed_activity$date, sum, na.rm = TRUE)
df <- data.frame(as.numeric(ymd(names(tot_imp_spd))), tot_imp_spd)
names(df) <- c('numeric_date', 'steps')
hist(df$steps, breaks = 20, xlab = 'Number of Steps', ylab = 'Number of Days', main = '')
mean_spd <- round(mean(df$steps))
median_spd <- round(median(df$steps))
print(paste("Mean steps per day:", as.character(mean_spd)))
print(paste("Median steps per day:", as.character(median_spd)))
imputed_activity
str(imputed_activity)
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return(TRUE)
else return(FALSE)
}
imputed_activity$weekend <- sapply(imputed_activity$date, weekend)
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return(TRUE)
else return(FALSE)
}
imputed_activity$weekend <- sapply(as.Date(imputed_activity$date), weekend)
imputed_activity
aggregate(imputed_activity,imputed_activity$date,sum)
aggregate(imputed_activity,list(imputed_activity$date),sum)
aggregate(imputed_activity,list(as.numeric(ymd(imputed_activity$date)),sum)
)
aggregate(imputed_activity,list(as.numeric(ymd(imputed_activity$date))),sum)
aggregate(imputed_activity$steps,list(as.numeric(ymd(imputed_activity$date))),sum)
aggregate(imputed_activity,list(as.numeric(ymd(imputed_activity$date))),NULL)
unique(imputed_activity[imputed_activity$weekend == TRUE])
unique(imputed_activity[imputed_activity$weekend == TRUE,])
ave_imp_spd <- aggregate(imputed_activity$steps ~ imputed_activity$interval, data = imputed_activity, mean)
ave_imp_spd
ave_imp_spd <- aggregate(steps ~ interval, data = imputed_activity, mean)
ave_imp_spd
ave_imp_spd <- aggregate(steps ~ interval + weekend, data = imputed_activity, mean)
ave_imp_spd
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return(TRUE)
else return(FALSE)
}
imputed_activity$weekend <- sapply(as.Date(imputed_activity$date), weekend)
ave_imp_spd <- aggregate(steps ~ interval + weekend, data = imputed_activity, mean)
ave_imp_wkend <- ave_imp_spd[ave_imp_spd$weekend == TRUE]
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return(TRUE)
else return(FALSE)
}
imputed_activity$weekend <- sapply(as.Date(imputed_activity$date), weekend)
ave_imp_spd <- aggregate(steps ~ interval + weekend, data = imputed_activity, mean)
ave_imp_wkend <- ave_imp_spd[ave_imp_spd$weekend == TRUE,]
ave_imp_week <- ave_imp_spd[ave_imp_spd$weekend == FALSE,]
par(mar = c(5.1, 4.1, 4.5, 2.1))
plot(ave_imp_wkend$minute_of_day, ave_imp_wkend$steps, type = 's', lwd = 2,
ylim = range(ave_imp_wkend$step),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Average (Over Days) of Number of Steps in Each Interval')
ave_imp_week
library(lubridate)
library(stringr)
if (!file.exists('activity.csv'))
unzip('./activity.zip')
activity <- read.csv('./activity.csv')
minutes <- substring(activity$interval,
nchar(activity$interval) - 2 + 1,
nchar(activity$interval))
hours <- substring(activity$interval, 1, nchar(activity$interval) - 2)
hours[hours == ''] <- '0'
activity$minute_of_day <- as.numeric(hours) * 60 + as.numeric(minutes)
activity
20*60+45
activity$day <- as.numeric(interval(ymd('2012-10-01'),activity$date))/(3600*24)
tot_spd <- tapply(activity$steps, activity$date, sum, na.rm = TRUE)
df <- data.frame(as.numeric(ymd(names(tot_spd))), tot_spd)
names(df) <- c('numeric_date', 'steps')
hist(df$steps, breaks = 20, xlab = 'Number of Steps', ylab = 'Number of Days', main = '')
mean_spd <- round(mean(df$steps, na.rm = TRUE))
median_spd <- round(median(df$steps, na.rm = TRUE))
print(paste("Mean steps per day:", as.character(mean_spd)))
print(paste("Median steps per day:", as.character(median_spd)))
ave_spi <- aggregate(list(steps = activity$steps),
list(interval = activity$interval),
mean, na.rm = TRUE)
par(mar = c(5.1, 4.1, 4.5, 2.1))
plot(ave_spi$minute_of_day, ave_spi$steps, type = 's', lwd = 2,
ylim = range(ave_spi$step, na.rm = TRUE),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Average (Over Days) of Number of Steps in Each Interval')
ave_spi
ave_spi <- aggregate(list(steps = activity$steps) + minute_of_day,
list(interval = activity$interval),
mean, na.rm = TRUE)
ave_spi <- aggregate(list(steps = activity$steps) + activity$minute_of_day,
list(interval = activity$interval),
mean, na.rm = TRUE)
activity
library(lubridate)
library(stringr)
if (!file.exists('activity.csv'))
unzip('./activity.zip')
activity <- read.csv('./activity.csv')
minutes <- substring(activity$interval,
nchar(activity$interval) - 2 + 1,
nchar(activity$interval))
hours <- substring(activity$interval, 1, nchar(activity$interval) - 2)
hours[hours == ''] <- '0'
activity$minute_of_day <- as.numeric(hours) * 60 + as.numeric(minutes)
activity$day <- as.numeric(interval(ymd('2012-10-01'),activity$date))/(3600*24)
tot_spd <- tapply(activity$steps, activity$date, sum, na.rm = TRUE)
df <- data.frame(as.numeric(ymd(names(tot_spd))), tot_spd)
names(df) <- c('numeric_date', 'steps')
hist(df$steps, breaks = 20, xlab = 'Number of Steps', ylab = 'Number of Days', main = '')
mean_spd <- round(mean(df$steps, na.rm = TRUE))
median_spd <- round(median(df$steps, na.rm = TRUE))
print(paste("Mean steps per day:", as.character(mean_spd)))
print(paste("Median steps per day:", as.character(median_spd)))
dates_NA <- sum(is.na(activity$date))
intervals_NA <- sum(is.na(activity$interval))
steps_NA <- sum(is.na(activity$steps))
steps_zero <- sum(activity$steps == 0, na.rm =TRUE)
dates_NA <- paste('Observations with activity$date == NA: ',
as.character(dates_NA))
intervals_NA <- paste('Observations with activity$interval == NA: ',
as.character(intervals_NA))
steps_NA <- paste('Observations with activity$steps == NA: ',
as.character(steps_NA))
steps_zero <- paste('Observations with activity$steps == 0: ',
as.character(steps_zero))
cat(paste(dates_NA, intervals_NA, steps_NA, steps_zero, sep = '\n\n'))
ave_spi <- aggregate(list(steps = activity$steps) + activity$minute_of_day,
list(interval = activity$interval),
mean, na.rm = TRUE)
str(activity)
ave_spi <- aggregate(activity$steps + activity$minute_of_day,
list(interval = activity$interval),
mean, na.rm = TRUE)
par(mar = c(5.1, 4.1, 4.5, 2.1))
plot(ave_spi$minute_of_day, ave_spi$steps, type = 's', lwd = 2,
ylim = range(ave_spi$step, na.rm = TRUE),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Average (Over Days) of Number of Steps in Each Interval')
head(ave_spi)
ave_spi <- aggregate(activity$steps ~ activity$interval + activity$minute_of_day,
list(interval = activity$interval),
mean, na.rm = TRUE)
par(mar = c(5.1, 4.1, 4.5, 2.1))
plot(ave_spi$minute_of_day, ave_spi$steps, type = 's', lwd = 2,
xlim = range(ave_spi$minustep, na.rm = TRUE),
ylim = range(ave_spi$step, na.rm = TRUE),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Average (Over Days) of Number of Steps in Each Interval')
head(ave_spi)
ave_spi <- aggregate(steps ~ interval + minute_of_day,
list(interval = activity$interval),
mean, data = activity, na.rm = TRUE)
ave_spi <- aggregate(steps ~ interval + minute_of_day,
list(interval = interval),
mean, data = activity, na.rm = TRUE)
ave_spi <- aggregate(activity$steps ~ activity$interval + activity$minute_of_day,
list(interval = activity$interval),
mean, data = activity, na.rm = TRUE)
ave_spi <- with(activity, aggregate(steps ~ interval + minute_of_day,
list(interval = interval),
mean, na.rm = TRUE))
ave_spi <- with(activity, aggregate(activity$steps ~ activity$interval + activity$minute_of_day,
list(interval = activity$interval),
mean, na.rm = TRUE))
par(mar = c(5.1, 4.1, 4.5, 2.1))
plot(ave_spi$minute_of_day, ave_spi$steps, type = 's', lwd = 2,
xlim = range(ave_spi$minustep, na.rm = TRUE),
ylim = range(ave_spi$step, na.rm = TRUE),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Average (Over Days) of Number of Steps in Each Interval')
ave_spi <- with(activity, aggregate(steps ~ interval + minute_of_day,
list(interval = interval),
mean, na.rm = TRUE))
ave_spi <- with(activity, aggregate(activity$steps ~ activity$interval + activity$minute_of_day,
list(interval = activity$interval),
mean, na.rm = TRUE))
par(mar = c(5.1, 4.1, 4.5, 2.1))
plot(ave_spi$minute_of_day, ave_spi$steps, type = 's', lwd = 2,
xlim = range(ave_spi$minute_of_day, na.rm = TRUE),
ylim = range(ave_spi$step, na.rm = TRUE),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Average (Over Days) of Number of Steps in Each Interval')
ave_spi <- with(activity, aggregate(steps ~ interval + minute_of_day,
list(interval = interval),
mean, na.rm = TRUE))
#ave_spi <- with(activity, aggregate(activity$steps ~ activity$interval + activity$minute_of_day,
#                     list(interval = activity$interval),
#                     mean, na.rm = TRUE))
par(mar = c(5.1, 4.1, 4.5, 2.1))
plot(ave_spi$minute_of_day, ave_spi$steps, type = 's', lwd = 2,
xlim = range(ave_spi$minute_of_day, na.rm = TRUE),
ylim = range(ave_spi$step, na.rm = TRUE),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Average (Over Days) of Number of Steps in Each Interval')
ave_spi[which.max(ave_spi$steps),]
dates_NA <- sum(is.na(activity$date))
intervals_NA <- sum(is.na(activity$interval))
steps_NA <- sum(is.na(activity$steps))
steps_zero <- sum(activity$steps == 0, na.rm =TRUE)
dates_NA <- paste('Observations with activity$date == NA: ',
as.character(dates_NA))
intervals_NA <- paste('Observations with activity$interval == NA: ',
as.character(intervals_NA))
steps_NA <- paste('Observations with activity$steps == NA: ',
as.character(steps_NA))
steps_zero <- paste('Observations with activity$steps == 0: ',
as.character(steps_zero))
cat(paste(dates_NA, intervals_NA, steps_NA, steps_zero, sep = '\n\n'))
rm(dates_NA, intervals_NA, steps_NA, steps_zero)
filler <- function(interval, steps){
if(!is.na(steps))
result <- c(steps)
else
result <- ave_spi[ave_spi$interval == interval, ]$steps
return(result)
}
imputed_activity <- activity
imputed_activity$steps <- mapply(filler, imputed_activity$interval, imputed_activity$steps)
tot_imp_spd <- tapply(imputed_activity$steps, imputed_activity$date, sum, na.rm = TRUE)
df <- data.frame(as.numeric(ymd(names(tot_imp_spd))), tot_imp_spd)
names(df) <- c('numeric_date', 'steps')
hist(df$steps, breaks = 20, xlab = 'Number of Steps', ylab = 'Number of Days', main = '')
mean_spd <- round(mean(df$steps))
median_spd <- round(median(df$steps))
print(paste("Mean steps per day:", as.character(mean_spd)))
print(paste("Median steps per day:", as.character(median_spd)))
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return(TRUE)
else return(FALSE)
}
imputed_activity$weekend <- sapply(as.Date(imputed_activity$date), weekend)
ave_imp_spd <- aggregate(steps ~ interval + weekend, data = imputed_activity, mean)
ave_imp_wkend <- ave_imp_spd[ave_imp_spd$weekend == TRUE,]
ave_imp_week <- ave_imp_spd[ave_imp_spd$weekend == FALSE,]
par(mar = c(5.1, 4.1, 4.5, 2.1))
plot(ave_imp_wkend$minute_of_day, ave_imp_wkend$steps, type = 's', lwd = 2,
ylim = range(ave_imp_wkend$step),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Average (Over Days) of Number of Steps in Each Interval')
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return(TRUE)
else return(FALSE)
}
imputed_activity$weekend <- sapply(as.Date(imputed_activity$date), weekend)
ave_imp_spd <- aggregate(steps ~ interval + minute_of_day + weekend,
data = imputed_activity, mean)
par(mar = c(5.1, 4.1, 4.5, 2.1))
plot(ave_spi$minute_of_day, ave_spi$steps, type = 's', lwd = 2,
xlim = range(ave_spi$minute_of_day, na.rm = TRUE),
ylim = range(ave_spi$step, na.rm = TRUE),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Average (Over Days) of Number of Steps in Each Interval')
ave_imp_spd <- aggregate(steps ~ interval + weekend, data = imputed_activity, mean)
ave_imp_wkend <- ave_imp_spd[ave_imp_spd$weekend == TRUE,]
ave_imp_week <- ave_imp_spd[ave_imp_spd$weekend == FALSE,]
par(mar = c(5.1, 4.1, 4.5, 2.1))
plot(ave_imp_wkend$minute_of_day, ave_imp_wkend$steps, type = 's', lwd = 2,
ylim = range(ave_imp_wkend$step),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Average (Over Days) of Number of Steps in Each Interval')
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return(TRUE)
else return(FALSE)
}
imputed_activity$weekend <- sapply(as.Date(imputed_activity$date), weekend)
ave_imp_spi <- aggregate(steps ~ interval + minute_of_day + weekend,
data = imputed_activity, mean)
ave_imp_wkend <- ave_imp_spi[ave_imp_spi$weekend == TRUE,]
ave_imp_week <- ave_imp_spi[ave_imp_spi$weekend == FALSE,]
par(mar = c(5.1, 4.1, 4.5, 2.1))
plot(ave_imp_week$minute_of_day, ave_imp_week$steps, type = 's', lwd = 2,
xlim = range(ave_imp_week$minute_of_day, na.rm = TRUE),
ylim = range(ave_imp_week$step, na.rm = TRUE),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Average (Over Days) of Number of Steps in Each Interval')
par(mar = c(5.1, 4.1, 4.5, 2.1))
plot(ave_imp_wkend$minute_of_day, ave_imp_wkend$steps, type = 's', lwd = 2,
xlim = range(ave_imp_wkend$minute_of_day, na.rm = TRUE),
ylim = range(ave_imp_wkend$step, na.rm = TRUE),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Average (Over Days) of Number of Steps in Each Interval')
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return(TRUE)
else return(FALSE)
}
imputed_activity$weekend <- sapply(as.Date(imputed_activity$date), weekend)()
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return(TRUE)
else return(FALSE)
}
imputed_activity$weekend <- sapply(as.Date(imputed_activity$date), weekend)
ave_imp_spi <- aggregate(steps ~ interval + minute_of_day + weekend,
data = imputed_activity, mean)
ave_imp_wkend <- ave_imp_spi[ave_imp_spi$weekend == TRUE,]
ave_imp_week <- ave_imp_spi[ave_imp_spi$weekend == FALSE,]
par(mar = c(5.1, 4.1, 4.5, 2.1))
plot(ave_imp_week$minute_of_day, ave_imp_week$steps, type = 's', lwd = 2,
xlim = range(ave_imp_week$minute_of_day, na.rm = TRUE),
ylim = range(ave_imp_week$step, na.rm = TRUE),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Average (Over Days) of Number of Steps in Each Interval')
par(mfrow = c(2, 1), mar = c(5.1, 4.1, 4.5, 2.1))
plot(ave_imp_wkend$minute_of_day, ave_imp_wkend$steps, type = 's', lwd = 2,
xlim = range(ave_imp_wkend$minute_of_day, na.rm = TRUE),
ylim = range(ave_imp_wkend$step, na.rm = TRUE),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Average (Over Days) of Number of Steps in Each Interval')
mean_spd <- round(mean(df$steps))
median_spd <- round(median(df$steps))
print(paste("Mean steps per day:", as.character(mean_spd)))
print(paste("Median steps per day:", as.character(median_spd)))
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return(TRUE)
else return(FALSE)
}
imputed_activity$weekend <- sapply(as.Date(imputed_activity$date), weekend)
ave_imp_spi <- aggregate(steps ~ interval + minute_of_day + weekend,
data = imputed_activity, mean)
ave_imp_wkend <- ave_imp_spi[ave_imp_spi$weekend == TRUE,]
ave_imp_week <- ave_imp_spi[ave_imp_spi$weekend == FALSE,]
par(mfrow = c(2, 1), mar = c(5.1, 4.1, 4.5, 2.1))
plot(ave_imp_week$minute_of_day, ave_imp_week$steps, type = 's', lwd = 2,
xlim = range(ave_imp_week$minute_of_day, na.rm = TRUE),
ylim = range(ave_imp_week$step, na.rm = TRUE),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Average (Over Days) of Number of Steps in Each Interval')
plot(ave_imp_wkend$minute_of_day, ave_imp_wkend$steps, type = 's', lwd = 2,
xlim = range(ave_imp_wkend$minute_of_day, na.rm = TRUE),
ylim = range(ave_imp_wkend$step, na.rm = TRUE),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Average (Over Days) of Number of Steps in Each Interval')
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return(TRUE)
else return(FALSE)
}
imputed_activity$weekend <- sapply(as.Date(imputed_activity$date), weekend)
ave_imp_spi <- aggregate(steps ~ interval + minute_of_day + weekend,
data = imputed_activity, mean)
ave_imp_wkend <- ave_imp_spi[ave_imp_spi$weekend == TRUE,]
ave_imp_week <- ave_imp_spi[ave_imp_spi$weekend == FALSE,]
par(mfrow = c(2, 1), mar = c(5.1, 4.1, 4.5, 2.1))
plot(ave_imp_week$minute_of_day, ave_imp_week$steps, type = 's', lwd = 2,
xlim = range(ave_imp_week$minute_of_day, na.rm = TRUE),
ylim = range(ave_imp_week$step, na.rm = TRUE),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Weekday Average of Number of Steps in Each Interval')
plot(ave_imp_wkend$minute_of_day, ave_imp_wkend$steps, type = 's', lwd = 2,
xlim = range(ave_imp_wkend$minute_of_day, na.rm = TRUE),
ylim = range(ave_imp_wkend$step, na.rm = TRUE),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Weekend Average of Number of Steps in Each Interval')
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return(TRUE)
else return(FALSE)
}
imputed_activity$weekend <- sapply(as.Date(imputed_activity$date), weekend)
ave_imp_spi <- aggregate(steps ~ interval + minute_of_day + weekend,
data = imputed_activity, mean)
ave_imp_wkend <- ave_imp_spi[ave_imp_spi$weekend == TRUE,]
ave_imp_week <- ave_imp_spi[ave_imp_spi$weekend == FALSE,]
par(mfrow = c(2, 1), mar = c(5.1, 4.1, 4.5, 2.1), fig = c(10,10,10,10))
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return(TRUE)
else return(FALSE)
}
imputed_activity$weekend <- sapply(as.Date(imputed_activity$date), weekend)
ave_imp_spi <- aggregate(steps ~ interval + minute_of_day + weekend,
data = imputed_activity, mean)
ave_imp_wkend <- ave_imp_spi[ave_imp_spi$weekend == TRUE,]
ave_imp_week <- ave_imp_spi[ave_imp_spi$weekend == FALSE,]
par(mfrow = c(2, 1), mar = c(5.1, 4.1, 4.5, 2.1), fig = c(1, 1, 1, 1))
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return(TRUE)
else return(FALSE)
}
imputed_activity$weekend <- sapply(as.Date(imputed_activity$date), weekend)
ave_imp_spi <- aggregate(steps ~ interval + minute_of_day + weekend,
data = imputed_activity, mean)
ave_imp_wkend <- ave_imp_spi[ave_imp_spi$weekend == TRUE,]
ave_imp_week <- ave_imp_spi[ave_imp_spi$weekend == FALSE,]
par(mfrow = c(2, 1), mar = c(5.1, 4.1, 4.5, 2.1), fin = c(6, 10))
plot(ave_imp_week$minute_of_day, ave_imp_week$steps, type = 's', lwd = 2,
xlim = range(ave_imp_week$minute_of_day, na.rm = TRUE),
ylim = range(ave_imp_week$step, na.rm = TRUE),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Weekday Average of Number of Steps in Each Interval')
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return(TRUE)
else return(FALSE)
}
imputed_activity$weekend <- sapply(as.Date(imputed_activity$date), weekend)
ave_imp_spi <- aggregate(steps ~ interval + minute_of_day + weekend,
data = imputed_activity, mean)
ave_imp_wkend <- ave_imp_spi[ave_imp_spi$weekend == TRUE,]
ave_imp_week <- ave_imp_spi[ave_imp_spi$weekend == FALSE,]
par(mfrow = c(2, 1), mar = c(5.1, 4.1, 4.5, 2.1), fin = c(5, 7))
plot(ave_imp_week$minute_of_day, ave_imp_week$steps, type = 's', lwd = 2,
xlim = range(ave_imp_week$minute_of_day, na.rm = TRUE),
ylim = range(ave_imp_week$step, na.rm = TRUE),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Weekday Average of Number of Steps in Each Interval')
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return(TRUE)
else return(FALSE)
}
imputed_activity$weekend <- sapply(as.Date(imputed_activity$date), weekend)
ave_imp_spi <- aggregate(steps ~ interval + minute_of_day + weekend,
data = imputed_activity, mean)
ave_imp_wkend <- ave_imp_spi[ave_imp_spi$weekend == TRUE,]
ave_imp_week <- ave_imp_spi[ave_imp_spi$weekend == FALSE,]
par(mfrow = c(2, 1), mar = c(5.1, 4.1, 4.5, 2.1))
plot(ave_imp_week$minute_of_day, ave_imp_week$steps, type = 's', lwd = 2,
xlim = range(ave_imp_week$minute_of_day, na.rm = TRUE),
ylim = range(ave_imp_week$step, na.rm = TRUE),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Weekday Average of Number of Steps in Each Interval')
plot(ave_imp_wkend$minute_of_day, ave_imp_wkend$steps, type = 's', lwd = 2,
xlim = range(ave_imp_wkend$minute_of_day, na.rm = TRUE),
ylim = range(ave_imp_wkend$step, na.rm = TRUE),
xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
main ='Weekend Average of Number of Steps in Each Interval')
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return(TRUE)
else return(FALSE)
}
imputed_activity$weekend <- sapply(as.Date(imputed_activity$date), weekend)
ave_imp_spi <- aggregate(steps ~ interval + minute_of_day + weekend,
data = imputed_activity, mean)
ave_imp_wkend <- ave_imp_spi[ave_imp_spi$weekend == TRUE,]
ave_imp_week <- ave_imp_spi[ave_imp_spi$weekend == FALSE,]
par(mfrow = c(2, 1), mar = c(5.1, 4.1, 4.5, 2.1))
layout(width = 500, height = 500)
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return(TRUE)
else return(FALSE)
}
imputed_activity$weekend <- sapply(as.Date(imputed_activity$date), weekend)
ave_imp_spi <- aggregate(steps ~ interval + minute_of_day + weekend,
data = imputed_activity, mean)
ave_imp_wkend <- ave_imp_spi[ave_imp_spi$weekend == TRUE,]
ave_imp_week <- ave_imp_spi[ave_imp_spi$weekend == FALSE,]
ggplot(ave_imp_spi, aes(interval, steps)) +
geom_line() + facet_grid(weekend ~ .) +
xlab("Minute of the Day") + ylab("Average Number of Steps")
library(ggplot2)
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return(TRUE)
else return(FALSE)
}
imputed_activity$weekend <- sapply(as.Date(imputed_activity$date), weekend)
ave_imp_spi <- aggregate(steps ~ interval + minute_of_day + weekend,
data = imputed_activity, mean)
ave_imp_wkend <- ave_imp_spi[ave_imp_spi$weekend == TRUE,]
ave_imp_week <- ave_imp_spi[ave_imp_spi$weekend == FALSE,]
ggplot(ave_imp_spi, aes(interval, steps)) +
geom_line() + facet_grid(weekend ~ .) +
xlab("Minute of the Day") + ylab("Average Number of Steps")
#par(mfrow = c(2, 1), mar = c(5.1, 4.1, 4.5, 2.1))
#plot(ave_imp_week$minute_of_day, ave_imp_week$steps, type = 's', lwd = 2,
#     xlim = range(ave_imp_week$minute_of_day, na.rm = TRUE),
#     ylim = range(ave_imp_week$step, na.rm = TRUE),
#     xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
#     main ='Weekday Average of Number of Steps in Each Interval')
#plot(ave_imp_wkend$minute_of_day, ave_imp_wkend$steps, type = 's', lwd = 2,
#     xlim = range(ave_imp_wkend$minute_of_day, na.rm = TRUE),
#     ylim = range(ave_imp_wkend$step, na.rm = TRUE),
#     xlab = 'Minute of the Day', ylab = 'Average Number of Steps',
#     main ='Weekend Average of Number of Steps in Each Interval')
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return('Weekend')
else return('Weekday')
}
imputed_activity$weekend <- sapply(as.Date(imputed_activity$date), weekend)
ave_imp_spi <- aggregate(steps ~ interval + minute_of_day + weekend,
data = imputed_activity, mean)
ggplot(ave_imp_spi, aes(interval, steps)) +
geom_line() + facet_grid(weekend ~ .) +
xlab("Minute of the Day") + ylab("Average Number of Steps")
